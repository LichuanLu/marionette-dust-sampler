/**
 * Backbone Nested Models
 * Author: Bret Little
 * Version: 0.3
 *
 * Nested model support in Backbone.js
 *
 **/
(function(e){var t=e.Model,n=e.Collection;e.Model.prototype.setRelation=function(e,r){var i=this.attributes[e],s,o=[],u=[];if(_.has(this.relations,e)){if(i&&i instanceof n){if(r instanceof n||r instanceof Array){r=r.models||r;o=_.clone(r);i.each(function(e,t){var n=_.find(r,function(t){return t.id===e.id});if(n){e.set(n.toJSON?n.toJSON():n);o.splice(t,1)}else{u.push(e)}});_.each(u,function(e){i.remove(e)});i.add(o)}else{i.each(function(e){if(r.id===e.id){e.set(r)}else{i.remove(e)}})}return i}if(i&&i instanceof t){i.set(r);return i}r=new this.relations[e](r);r.parent=this}return r};e.Model.prototype.set=function(e,t,n){var r,i,s,o,u,a,f,l;if(e==null)return this;if(typeof e==="object"){i=e;n=t}else{(i={})[e]=t}n||(n={});if(!this._validate(i,n))return false;s=n.unset;u=n.silent;o=[];a=this._changing;this._changing=true;if(!a){this._previousAttributes=_.clone(this.attributes);this.changed={}}l=this.attributes,f=this._previousAttributes;if(this.idAttribute in i)this.id=i[this.idAttribute];for(r in i){t=i[r];t=this.setRelation(r,t);if(!_.isEqual(l[r],t))o.push(r);if(!_.isEqual(f[r],t)){this.changed[r]=t}else{delete this.changed[r]}s?delete l[r]:l[r]=t}if(!u){if(o.length)this._pending=true;for(var c=0,h=o.length;c<h;c++){this.trigger("change:"+o[c],this,l[o[c]],n)}}if(a)return this;if(!u){while(this._pending){this._pending=false;this.trigger("change",this,n)}}this._pending=false;this._changing=false;return this}})(Backbone)
